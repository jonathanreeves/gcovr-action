name: test
on:
  workflow_dispatch:
  push:
jobs:
  check-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.3.0

      - name: Install dependencies
        run: npm install

      - name: Check formatting
        run: npm run format-check

      - name: Run static analysis
        run: npm run lint

      - name: Build this package
        run: npm run build

      - name: Build this package for distribution
        run: npm run package

  standard-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.3.0

      - name: Configure and build the test project
        uses: threeal/cmake-action@v1.0.0
        with:
          source-dir: test
          generator: Ninja
          cxx-compiler: g++

      - name: Test the test project
        run: ctest --test-dir build

      - name: Use this action
        uses: ./

  llvm-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.3.0

      - name: Configure and build the test project
        uses: threeal/cmake-action@v1.0.0
        with:
          source-dir: test
          generator: Ninja
          c-compiler: clang
          cxx-compiler: clang++

      - name: Test the test project
        run: ctest --test-dir build

      - name: Use this action with llvm-cov as the gcov executable
        uses: ./
        with:
          gcov-executable: ${{ matrix.os == 'macos' && 'xcrun ' || '' }}llvm-cov gcov

  exclusion-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.3.0

      - name: Configure and build the test project
        uses: threeal/cmake-action@v1.0.0
        with:
          source-dir: test
          build-dir: test/build
          generator: Ninja
          cxx-compiler: g++
          args: -DTEST_EVEN=OFF -DTEST_ODD=OFF

      - name: Test the test project
        run: ctest --test-dir test/build

      - name: Use this action without an exclusion
        id: failed_step
        continue-on-error: true
        uses: ./
        with:
          root: test
          fail-under-line: 100

      - name: Check if the previous step did fail
        run: ${{ steps.failed_step.outcome == 'failure' && true || false }}

      - name: Use this action without an exclusion but with a lower fail threshold
        uses: ./
        with:
          root: test
          fail-under-line: 50

      - name: Use this action with an exclusion
        uses: ./
        with:
          root: test
          exclude: test/include/*
          fail-under-line: 100

  coveralls-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.3.0

      - name: Configure and build the test project
        uses: threeal/cmake-action@v1.0.0
        with:
          source-dir: test
          generator: Ninja
          cxx-compiler: g++

      - name: Test the test project
        run: ctest --test-dir build

      - name: Use this action to generate a Coveralls report
        uses: ./
        with:
          coveralls-out: coveralls.json

      - name: Check if that Coveralls report does exist
        run: cat coveralls.json

      - name: Use this action to generate and send another Coveralls report
        uses: ./
        with:
          coveralls-send: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use this action to generate and send another Coveralls report on a specified output
        uses: ./
        with:
          coveralls-out: coveralls-2.json
          coveralls-send: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if that Coveralls report does exist
        run: cat coveralls-2.json
